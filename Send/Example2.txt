using RabbitMQ.Client;
using System;
using System.Collections.Generic;
using System.Text;

namespace UdemyRabbitMQ.Publisher
{
    class Program2
    {
        static void Main(string[] args)
        {
            var factory = new ConnectionFactory();//instance bağlanmak için oluşturduk
            factory.Uri = new Uri("amqps://dazfzfmg:HLo6r8xAKPluHAqQE94tMj-PgWweHUAt@grouse.rmq.cloudamqp.com/dazfzfmg");

            //factory.HostName = "localhost";
            //factory.UserName = "####KullanıcıAdıGir"####";
            //factory.Password = "####ŞifreyiGir"####

            //bağlantıyı açalım.
            //usin ifadesi içerisinde bir clasdan bir nesne oluşturursak 
            //ve o nesnemiz idisposable interfacesine sahipse using bloğundan çıktığında bu arkadaş memordiden silinir
            using (var connection = factory.CreateConnection())
            {
                //bağlantı hazırsa kanal oluşturalım
                using (var channel = connection.CreateModel())
                {
                    channel.ExchangeDeclare(exchange: "logs", type: ExchangeType.Fanout, durable: true);

                    string message = GetMessages(args);

                    for (int i = 1; i < 11; i++)
                    {
                        var bodyByte = Encoding.UTF8.GetBytes($"{message}-{i}");
                        var properties = channel.CreateBasicProperties();
                        properties.Persistent = true;//Mesajıda sağlamaa aldık.


                        channel.BasicPublish(exchange: "logs", routingKey: "", properties, bodyByte);


                        Console.WriteLine($"Mesajınız Gönderilmiştir : {message}-{i}");
                    }




                }


                Console.ReadLine();
            }


        }

        private static string GetMessages(string[] args)
        {
            return args[0].ToString();
        }
    }
}
